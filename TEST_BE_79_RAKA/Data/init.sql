IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='CST' AND XTYPE='U'
) 	
CREATE TABLE CST
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NAME VARCHAR(64) NOT NULL
);
GO

IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='TRS_DSC' AND XTYPE='U'
) 	
CREATE TABLE TRS_DSC 
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TRS_TYPE VARCHAR(64) NOT NULL

);
GO

IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='CST_TRS' AND XTYPE='U'
) 	
CREATE TABLE CST_TRS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CST_ID INT NOT NULL,
	TRS_DATE DATE NOT NULL,
	TRS_AMT FLOAT NOT NULL,
	DSC_ID INT NOT NULL,
	TRS_DBT_CRD CHAR NOT NULL,
	CONSTRAINT FK_CST FOREIGN KEY(CST_ID)
		REFERENCES CST(ID)
		ON DELETE CASCADE,
	CONSTRAINT FK_DSC FOREIGN KEY(DSC_ID)
		REFERENCES TRS_DSC (ID)
		ON DELETE CASCADE

);
GO




IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='TRS_PNT' AND XTYPE='U'
) 	
CREATE TABLE TRS_PNT
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TRS_DSC_ID INT NOT NULL,
	TRS_MIN FLOAT NOT NULL,
	TRS_MAX FLOAT NOT NULL,
	TRS_PNT INT,
	CONSTRAINT FK_TRS_DSC FOREIGN KEY(TRS_DSC_ID)
		REFERENCES TRS_DSC (ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
)
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SEL_CST')
	DROP PROCEDURE SEL_CST
GO
CREATE PROCEDURE SEL_CST 
(
	@ID INT = NULL,
	@NAME VARCHAR(64) = NULL
)
AS 
	BEGIN
		IF @ID=NULL AND @NAME = NULL (SELECT * FROM CST) 
		ELSE IF @ID = NULL (SELECT * FROM CST WHERE NAME = @NAME)
		ELSE IF @NAME = NULL (SELECT * FROM CST WHERE ID = @ID)
		ELSE SELECT * FROM CST WHERE ID=@ID AND NAME=@NAME
	END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'INS_CST')
	DROP PROCEDURE INS_CST
GO
CREATE PROCEDURE INS_CST
(
	@NAME VARCHAR(64)
)
AS
	BEGIN 
		INSERT INTO CST(NAME) VALUES
		(
			@NAME
		)
	END
GO
CREATE PROCEDURE INS_TRS
(
	@CST_ID INT,
	@TRS_DATE DATE,
	@TRS_DSC VARCHAR(64),
	@TRS_AMT FLOAT,
	@TRS_DBT_CRD CHAR
)
AS
	BEGIN
		
		IF NOT EXISTS(SELECT ID FROM TRS_DSC WHERE TRS_TYPE = @TRS_DSC)
		INSERT INTO TRS_DSC(TRS_TYPE) VALUES(@TRS_DSC)
		ELSE SELECT 1;

		WITH F_DSC_ID AS (SELECT ID FROM TRS_DSC WHERE TRS_TYPE = @TRS_DSC)
		INSERT INTO CST_TRS(CST_ID, TRS_DATE, DSC_ID, TRS_DBT_CRD, TRS_AMT) 
		VALUES
		(
			@CST_ID,
			@TRS_DATE,
			(SELECT * FROM F_DSC_ID),
			@TRS_DBT_CRD,
			@TRS_AMT
		)
	END
GO

CREATE PROCEDURE CST_TRS_RPT
(
	@CST_ID INT,
	@DATE_START DATE,
	@DATE_END DATE
)
AS
	BEGIN
		WITH CST_TRS_HST AS 
		(
			SELECT * FROM CST_TRS  
				JOIN TRS_DSC ON (CST_TRS.DSC_ID = TRS_DSC.ID) 
				WHERE CST_ID = @CST_ID
		)

		SELECT TRS_DATE AS "Transaction Date", 
			TRS_TYPE AS "Description",
			(SELECT AMOUNT FROM CST_TRS_HST WHERE TRS_DBT_CRD='C') "Credit",
			(SELECT AMOUNT FROM CST_TRS_HST WHERE TRS_DBT_CRD='D') "Debit",
			AMOUNT
			FROM CST_TRS_HST
			WHERE TRS_DATE BETWEEN @DATE_START AND @DATE_END
			ORDER BY TRS_DATE
	END
GO


CREATE PROCEDURE GET_CST_TRS
(
	@CST_ID INT
)
AS
	BEGIN

		SELECT * FROM CST_TRS  
			JOIN TRS_DSC ON (CST_TRS.DSC_ID = TRS_DSC.ID) 
			WHERE CST_ID = @CST_ID

	END
GO
--CREATE PROCEDURE CST_TRS_PNT
--(
--	@CST_ID INT
--)
--AS
--	BEGIN
--		SELECT 
--	END
--GO

 INSERT INTO TRS_DSC(TRS_TYPE) VALUES('Bayar Listrik'),('Tarik Tunai'), ('Setor Tunai'), ('Beli Pulsa');