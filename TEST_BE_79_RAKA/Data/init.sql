IF NOT EXISTS(SELECT 1 FROM sys.databases WHERE name = 'TEST_DB')
BEGIN
    CREATE DATABASE [TEST_DB]
END
GO

USE TEST_DB;

IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='CST' AND XTYPE='U'
) 	
CREATE TABLE CST
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NAME VARCHAR(64) NOT NULL
);
GO

IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='TRS_DSC' AND XTYPE='U'
) 	
CREATE TABLE TRS_DSC 
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TRS_TYPE VARCHAR(64) NOT NULL

);
GO

IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='CST_TRS' AND XTYPE='U'
) 	
CREATE TABLE CST_TRS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CST_ID INT NOT NULL,
	TRS_DATE DATE NOT NULL,
	TRS_AMT FLOAT NOT NULL,
	DSC_ID INT NOT NULL,
	TRS_DBT_CRD CHAR NOT NULL,
	CONSTRAINT FK_CST FOREIGN KEY(CST_ID)
		REFERENCES CST(ID)
		ON DELETE CASCADE,
	CONSTRAINT FK_DSC FOREIGN KEY(DSC_ID)
		REFERENCES TRS_DSC (ID)
		ON DELETE CASCADE

);
GO




IF NOT EXISTS
(
	SELECT 1 FROM SYSOBJECTS WHERE NAME='TRS_PNT' AND XTYPE='U'
) 	
CREATE TABLE TRS_PNT
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TRS_DSC_ID INT NOT NULL,
	TRS_MIN FLOAT NOT NULL,
	TRS_MAX FLOAT NOT NULL,
	TRS_PNT INT,
	CONSTRAINT FK_TRS_DSC FOREIGN KEY(TRS_DSC_ID)
		REFERENCES TRS_DSC (ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
)
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SEL_CST')
	DROP PROCEDURE SEL_CST
GO
CREATE PROCEDURE SEL_CST 
(
	@ID INT = NULL,
	@NAME VARCHAR(64) = NULL
)
AS 
	BEGIN
		SELECT * FROM CST 
			WHERE ID = CASE WHEN @ID IS NULL THEN ID ELSE @ID END 
			AND NAME = CASE WHEN @NAME IS NULL THEN NAME ELSE @NAME END
	END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'INS_CST')
	DROP PROCEDURE INS_CST
GO
CREATE PROCEDURE INS_CST
(
	@NAME VARCHAR(64),
	@NEW_ID INT OUTPUT
)
AS
	BEGIN 
		IF EXISTS(SELECT 1 FROM CST WHERE NAME = @NAME)
		SELECT @NEW_ID = -1 ELSE
		INSERT INTO CST(NAME) VALUES
		(
			@NAME
		)
		SELECT @NEW_ID = SCOPE_IDENTITY()
		
	END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'INS_TRS')
	DROP PROCEDURE INS_TRS
GO
CREATE PROCEDURE INS_TRS
(
	@CST_ID INT,
	@TRS_DATE DATE,
	@TRS_DSC VARCHAR(64),
	@TRS_AMT FLOAT,
	@TRS_DBT_CRD CHAR
)
AS
	BEGIN
		
		IF NOT EXISTS(SELECT ID FROM TRS_DSC WHERE TRS_TYPE = @TRS_DSC)
		INSERT INTO TRS_DSC(TRS_TYPE) VALUES(@TRS_DSC)
		ELSE SELECT 1;

		WITH F_DSC_ID AS (SELECT ID FROM TRS_DSC WHERE TRS_TYPE = @TRS_DSC)
		INSERT INTO CST_TRS(CST_ID, TRS_DATE, DSC_ID, TRS_DBT_CRD, TRS_AMT) 
		VALUES
		(
			@CST_ID,
			@TRS_DATE,
			(SELECT * FROM F_DSC_ID),
			@TRS_DBT_CRD,
			@TRS_AMT
		)
	END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'CST_TRS_RPT')
	DROP PROCEDURE CST_TRS_RPT
GO
CREATE PROCEDURE CST_TRS_RPT
(
	@CST_ID INT,
	@DATE_START DATE,
	@DATE_END DATE
)
AS
	BEGIN
		SELECT TRS_DATE, 
			TRS_TYPE AS DSC,
			CASE WHEN TRS_DBT_CRD = 'C' THEN 'C' ELSE '-' end CRD,
			CASE WHEN TRS_DBT_CRD = 'D' THEN 'D' ELSE '-' end DBT,
			TRS_AMT
			FROM CST_TRS T
			JOIN TRS_DSC D ON T.DSC_ID = D.ID
			WHERE CST_ID = @CST_ID AND TRS_DATE BETWEEN @DATE_START AND @DATE_END
			ORDER BY TRS_DATE
	END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GET_CST_TRS')
	DROP PROCEDURE GET_CST_TRS
GO
CREATE PROCEDURE GET_CST_TRS
(
	@CST_ID INT
)
AS
	BEGIN

		SELECT * FROM CST_TRS  
			JOIN TRS_DSC ON (CST_TRS.DSC_ID = TRS_DSC.ID) 
			WHERE CST_ID = @CST_ID

	END
GO
